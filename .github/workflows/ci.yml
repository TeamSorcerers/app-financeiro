# Workflow de Integra√ß√£o Cont√≠nua para valida√ß√£o de c√≥digo
#
# Executa verifica√ß√µes de qualidade de c√≥digo e build ap√≥s cada commit
#
name: CI - Valida√ß√£o de C√≥digo

on:
  # Executa em pushes para as branches principais
  push:
    branches: ["main", "master", "develop"]
  
  # Executa em pull requests direcionados √†s branches principais
  pull_request:
    branches: ["main", "master", "develop"]
  
  # Permite executar manualmente
  workflow_dispatch:

# Cancela execu√ß√µes anteriores se um novo commit for feito
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job de valida√ß√£o de c√≥digo
  validate:
    name: Valida√ß√£o de C√≥digo
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
      
      - name: Configurar Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Verificar tipos TypeScript
        run: npm run type-check
      
      - name: Executar ESLint
        run: npm run lint
      
      - name: Gerar cliente Prisma
        run: npm run db:generate
      
      - name: Verificar build do Next.js
        run: npm run build
        env:
          # Vari√°veis necess√°rias para o build
          DATABASE_URL: "postgresql://test:test@localhost:5432/test_db"
          AUTH_SECRET: "test-secret-for-ci-only-not-for-production"
          AUTH_TRUST_HOST: true
          APP_ENV: "development"
          NEXT_PUBLIC_API_BASE_URL: "/api"
          NEXT_PUBLIC_APP_SUBFOLDER: ""
      
      - name: Verificar se existem arquivos n√£o commitados
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "‚ùå Existem arquivos modificados que n√£o foram commitados:"
            git status --porcelain
            exit 1
          else
            echo "‚úÖ Nenhum arquivo foi modificado durante o build"
          fi

  # Job de an√°lise de depend√™ncias
  security:
    name: An√°lise de Seguran√ßa
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Auditoria de seguran√ßa
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Verificar depend√™ncias desatualizadas
        run: npm outdated
        continue-on-error: true

  # Job de verifica√ß√£o do schema Prisma
  database:
    name: Valida√ß√£o do Banco de Dados
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Validar schema Prisma
        run: npx prisma validate
      
      - name: Verificar formato do schema
        run: npx prisma format --check
        continue-on-error: true
      
      - name: Gerar cliente Prisma
        run: npm run db:generate

  # Resumo dos resultados
  ci-summary:
    name: Resumo da CI
    runs-on: ubuntu-latest
    needs: [validate, security, database]
    if: always()
    
    steps:
      - name: Verificar resultados
        run: |
          echo "üìä Resumo da Integra√ß√£o Cont√≠nua:"
          echo "‚úÖ Valida√ß√£o de c√≥digo: ${{ needs.validate.result }}"
          echo "üîí An√°lise de seguran√ßa: ${{ needs.security.result }}"
          echo "üóÑÔ∏è Valida√ß√£o do banco: ${{ needs.database.result }}"
          
          if [[ "${{ needs.validate.result }}" == "failure" ]]; then
            echo "‚ùå Falha na valida√ß√£o de c√≥digo"
            exit 1
          fi
          
          if [[ "${{ needs.database.result }}" == "failure" ]]; then
            echo "‚ùå Falha na valida√ß√£o do banco"
            exit 1
          fi
          
          echo "üéâ Todas as verifica√ß√µes principais passaram!"